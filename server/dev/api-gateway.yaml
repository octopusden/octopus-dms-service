eureka:
  client:
    enabled: false

spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: dms-service
          uri: http://host.docker.internal:8080
          predicates:
            - Path=/dms-service/**
          filters:
            - StripPrefix=1
  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: ${auth-server.url}/realms/${auth-server.realm}/protocol/openid-connect/token
            authorization-uri: ${auth-server.url}/realms/${auth-server.realm}/protocol/openid-connect/auth
            userinfo-uri: ${auth-server.url}/realms/${auth-server.realm}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
        registration:
          keycloak:
            provider: keycloak
            client-id: ${auth-server.client-id}
            client-secret: ${auth-server.client-secret}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Authentication Server

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        #        curl -i -X POST -H 'Content-Type: application/json' -d '{"configuredLevel": "INFO"}' http://localhost:10003/actuator/loggers/ROOT
        include: health, env, metrics, threaddump, heapdump, info, configprops, prometheus, loggers
    loggers:
      enabled: true

auth-server:
  url: # set via env
  logout-url: ${auth-server.url}/realms/${auth-server.realm}/protocol/openid-connect/logout?redirect_uri=http://localhost:${server.port}/dms-ui/
  realm: # set via env
  client-id: # set via env
  client-secret: # set via env

logging:
  level:
    ROOT: INFO
    org.octopusden.cloud.apigateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG